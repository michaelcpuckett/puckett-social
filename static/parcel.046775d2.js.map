{"mappings":"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","sources":["pages/home.ts"],"sourcesContent":["import showdown from 'showdown';\r\nimport { stripHtml } from 'string-strip-html';\r\n\r\n// Matches the \"#\" character followed by one or more occurrences of either\r\n// non-ASCII characters or word characters (letters, digits, and underscores).\r\nconst hashtagRegexp = /(#(?:[^\\x00-\\x7F]|\\w)+)/g;\r\nconst mentionRegexp =\r\n  /(@(?:[^\\x00-\\x7F]|\\w)+@(?:[^\\x00-\\x7F]|\\w)+\\.(?:[^\\x00-\\x7F]|\\w)+)/g;\r\n\r\nconst extractMentions = (value: string) => {\r\n  return [...(value.match(mentionRegexp) ?? [])];\r\n};\r\n\r\nconst extractHashtags = (value: string) => {\r\n  return [...(value.match(hashtagRegexp) ?? [])];\r\n};\r\n\r\nconst getMentionActorUrls = async (mentions: string[]) => {\r\n  return Object.fromEntries(\r\n    await Promise.all(\r\n      mentions.map(async (mention) => {\r\n        const [_, username, domain] = mention.split('@');\r\n\r\n        const jrdProfile = await fetch(\r\n          `/proxy/?resource=https://${domain}/.well-known/webfinger?resource=acct:${username}@${domain}`,\r\n          {\r\n            headers: {\r\n              Accept: 'application/json',\r\n            },\r\n          },\r\n        ).then((response) => {\r\n          if (response.body) {\r\n            return response.json();\r\n          } else {\r\n            return {\r\n              links: [],\r\n            };\r\n          }\r\n        });\r\n\r\n        if (!Array.isArray(jrdProfile?.links)) {\r\n          return [];\r\n        }\r\n\r\n        for (const link of jrdProfile.links) {\r\n          if (\r\n            link.rel === 'self' &&\r\n            link.type === 'application/activity+json' &&\r\n            link.href\r\n          ) {\r\n            return [mention, link.href];\r\n          }\r\n        }\r\n\r\n        return [];\r\n      }),\r\n    ),\r\n  );\r\n};\r\n\r\nconst replaceMicrosyntaxWithMarkup = async (\r\n  value: string,\r\n  mentionedActorUrls: { [key: string]: URL },\r\n) => {\r\n  const withHashtagsReplaced = value.replace(hashtagRegexp, (hashtag) => {\r\n    const url = new URL(\r\n      `/tags/${hashtag.toLowerCase().replace('#', '')}`,\r\n      window.location.href,\r\n    ).toString();\r\n    return `<a href=\"${url}\">${hashtag}</a>`;\r\n  });\r\n\r\n  return withHashtagsReplaced.replace(mentionRegexp, (mention) => {\r\n    const url = mentionedActorUrls[mention];\r\n\r\n    if (url) {\r\n      return `<a href=\"${url}\">${mention}</a>`;\r\n    } else {\r\n      return mention;\r\n    }\r\n  });\r\n};\r\n\r\nconst editProfileFormElement = window.document.querySelector(\r\n  'form[data-action=\"edit-profile\"]',\r\n);\r\n\r\neditProfileFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = editProfileFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    editProfileFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = editProfileFormElement.getAttribute('data-actor-id') ?? '';\r\n\r\n  const name =\r\n    editProfileFormElement?.querySelector<HTMLInputElement>('[name=\"name\"]')\r\n      ?.value ?? '';\r\n  const summary =\r\n    editProfileFormElement?.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"summary\"]',\r\n    )?.value ?? '';\r\n\r\n  const converter = new showdown.Converter();\r\n  const htmlSummary = converter.makeHtml(summary);\r\n\r\n  const strippedSummary = stripHtml(htmlSummary).result;\r\n\r\n  const mentions = extractMentions(strippedSummary);\r\n  const hashtags = extractHashtags(strippedSummary);\r\n\r\n  const mentionedActorUrls = await getMentionActorUrls(mentions);\r\n\r\n  const mentionObjects = mentions\r\n    .map((mention) => {\r\n      const url = mentionedActorUrls[mention];\r\n\r\n      if (!url) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        type: 'Mention',\r\n        href: url,\r\n        name: mention,\r\n      };\r\n    })\r\n    .filter((_) => !!_);\r\n\r\n  const hashtagObjects = hashtags.map((hashtag) => ({\r\n    type: 'Hashtag',\r\n    name: hashtag,\r\n  }));\r\n\r\n  const tags = [...mentionObjects, ...hashtagObjects];\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Update',\r\n      actor: actorId,\r\n      to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n      object: {\r\n        id: actorId,\r\n        name,\r\n        summary: await replaceMicrosyntaxWithMarkup(\r\n          htmlSummary,\r\n          mentionedActorUrls,\r\n        ),\r\n        ...(tags.length\r\n          ? {\r\n              tag: tags,\r\n            }\r\n          : null),\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst uploadIconFormElement = window.document.querySelector<HTMLFormElement>(\r\n  'form[data-action=\"upload-icon\"]',\r\n);\r\n\r\nuploadIconFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = uploadIconFormElement.getAttribute('action') ?? '';\r\n  const uploadMediaEndpointUrl =\r\n    uploadIconFormElement.getAttribute('data-upload-media-endpoint-url') ?? '';\r\n  const followersUrl =\r\n    uploadIconFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = uploadIconFormElement.getAttribute('data-actor-id') ?? '';\r\n  const formData = new FormData(uploadIconFormElement);\r\n  formData.set('object', JSON.stringify({ type: 'Image' }));\r\n  fetch(uploadMediaEndpointUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => {\r\n      const createActivityUrl = response.headers.get('Location');\r\n      if (createActivityUrl) {\r\n        fetch(`/proxy?resource=${createActivityUrl}`)\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then(({ object: icon }) => {\r\n            fetch(outboxUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/activity+json',\r\n              },\r\n              body: JSON.stringify({\r\n                '@context': ['https://www.w3.org/ns/activitystreams'],\r\n                type: 'Update',\r\n                actor: actorId,\r\n                to: [\r\n                  'https://www.w3.org/ns/activitystreams#Public',\r\n                  followersUrl,\r\n                ],\r\n                object: {\r\n                  id: actorId,\r\n                  icon,\r\n                },\r\n              }),\r\n            })\r\n              .then((response) => {\r\n                if (response.headers.get('Location')) {\r\n                  window.location.reload();\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst uploadImageFormElement = window.document.querySelector<HTMLFormElement>(\r\n  'form[data-action=\"upload-image\"]',\r\n);\r\n\r\nuploadImageFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = uploadImageFormElement.getAttribute('action') ?? '';\r\n  const uploadMediaEndpointUrl =\r\n    uploadImageFormElement.getAttribute('data-upload-media-endpoint-url') ?? '';\r\n  const followersUrl =\r\n    uploadImageFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = uploadImageFormElement.getAttribute('data-actor-id') ?? '';\r\n  const formData = new FormData(uploadImageFormElement);\r\n  formData.set('object', JSON.stringify({ type: 'Image' }));\r\n  fetch(uploadMediaEndpointUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => {\r\n      const createActivityUrl = response.headers.get('Location');\r\n      if (createActivityUrl) {\r\n        fetch(`/proxy/?resource=${createActivityUrl}`)\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then(({ object: image }) => {\r\n            fetch(outboxUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/activity+json',\r\n              },\r\n              body: JSON.stringify({\r\n                '@context': ['https://www.w3.org/ns/activitystreams'],\r\n                type: 'Update',\r\n                actor: actorId,\r\n                to: [\r\n                  'https://www.w3.org/ns/activitystreams#Public',\r\n                  followersUrl,\r\n                ],\r\n                object: {\r\n                  id: actorId,\r\n                  image,\r\n                },\r\n              }),\r\n            })\r\n              .then((response) => {\r\n                if (response.headers.get('Location')) {\r\n                  window.location.reload();\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst followFormElement = window.document.querySelector(\r\n  'form[data-action=\"follow\"]',\r\n);\r\n\r\nfollowFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = followFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    followFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = followFormElement.getAttribute('data-actor-id') ?? '';\r\n\r\n  const object =\r\n    followFormElement.querySelector<HTMLInputElement>('[name=\"object\"]')\r\n      ?.value ?? '';\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Follow',\r\n      actor: actorId,\r\n      to: [\r\n        'https://www.w3.org/ns/activitystreams#Public',\r\n        followersUrl,\r\n        object,\r\n      ],\r\n      object,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst newMicroblogStatusFormElement = window.document.querySelector(\r\n  '[data-action=\"new-microblog-status\"]',\r\n);\r\n\r\nnewMicroblogStatusFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = newMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    newMicroblogStatusFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId =\r\n    newMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n  const content =\r\n    newMicroblogStatusFormElement.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"content\"]',\r\n    )?.value ?? '';\r\n\r\n  const mentions = extractMentions(content);\r\n  const hashtags = extractHashtags(content);\r\n  const mentionedActorUrls = await getMentionActorUrls(mentions);\r\n\r\n  const converter = new showdown.Converter();\r\n  const htmlContent = converter.makeHtml(\r\n    await replaceMicrosyntaxWithMarkup(content, mentionedActorUrls),\r\n  );\r\n\r\n  const mentionObjects = mentions\r\n    .map((mention) => {\r\n      const url = mentionedActorUrls[mention];\r\n\r\n      if (!url) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        type: 'Mention',\r\n        href: url,\r\n        name: mention,\r\n      };\r\n    })\r\n    .filter((_) => !!_);\r\n\r\n  const hashtagObjects = hashtags.map((hashtag) => ({\r\n    type: 'Hashtag',\r\n    name: hashtag,\r\n  }));\r\n\r\n  const tags = [...mentionObjects, ...hashtagObjects];\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Create',\r\n      actor: actorId,\r\n      to: [\r\n        'https://www.w3.org/ns/activitystreams#Public',\r\n        followersUrl,\r\n        ...Object.values(mentionedActorUrls),\r\n      ],\r\n      object: {\r\n        type: 'Note',\r\n        content: htmlContent,\r\n        ...(tags.length\r\n          ? {\r\n              tag: tags,\r\n            }\r\n          : null),\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst updateMicroblogStatusFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"update-microblog-status\"]'),\r\n);\r\n\r\nfor (const updateMicroblogStatusFormElement of updateMicroblogStatusFormElements) {\r\n  updateMicroblogStatusFormElement?.addEventListener(\r\n    'submit',\r\n    async (event) => {\r\n      event.preventDefault();\r\n\r\n      const outboxUrl =\r\n        updateMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n      const followersUrl =\r\n        updateMicroblogStatusFormElement.getAttribute('data-followers-url') ??\r\n        '';\r\n      const actorId =\r\n        updateMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n      const objectId =\r\n        updateMicroblogStatusFormElement.getAttribute('data-object-id') ?? '';\r\n      const content =\r\n        updateMicroblogStatusFormElement.querySelector<HTMLTextAreaElement>(\r\n          '[name=\"content\"]',\r\n        )?.value ?? '';\r\n\r\n      const converter = new showdown.Converter();\r\n      const htmlContent = converter.makeHtml(content);\r\n\r\n      const strippedContent = stripHtml(htmlContent).result;\r\n\r\n      const mentions = extractMentions(strippedContent);\r\n      const hashtags = extractHashtags(strippedContent);\r\n\r\n      const mentionedActorUrls = await getMentionActorUrls(mentions);\r\n\r\n      const mentionObjects = mentions\r\n        .map((mention) => {\r\n          const url = mentionedActorUrls[mention];\r\n\r\n          if (!url) {\r\n            return null;\r\n          }\r\n\r\n          return {\r\n            type: 'Mention',\r\n            href: url,\r\n            name: mention,\r\n          };\r\n        })\r\n        .filter((_) => !!_);\r\n\r\n      const hashtagObjects = hashtags.map((hashtag) => ({\r\n        type: 'Hashtag',\r\n        name: hashtag,\r\n      }));\r\n\r\n      const tags = [...mentionObjects, ...hashtagObjects];\r\n\r\n      fetch(outboxUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/activity+json',\r\n        },\r\n        body: JSON.stringify({\r\n          '@context': ['https://www.w3.org/ns/activitystreams'],\r\n          type: 'Update',\r\n          actor: actorId,\r\n          to: [\r\n            'https://www.w3.org/ns/activitystreams#Public',\r\n            followersUrl,\r\n            ...Object.values(mentionedActorUrls),\r\n          ],\r\n          object: {\r\n            id: objectId,\r\n            content: await replaceMicrosyntaxWithMarkup(\r\n              htmlContent,\r\n              mentionedActorUrls,\r\n            ),\r\n            ...(tags.length\r\n              ? {\r\n                  tag: tags,\r\n                }\r\n              : null),\r\n          },\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.headers.get('Location')) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  );\r\n}\r\n\r\nconst deleteMicroblogStatusFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"delete-microblog-status\"]'),\r\n);\r\n\r\nfor (const deleteMicroblogStatusFormElement of deleteMicroblogStatusFormElements) {\r\n  deleteMicroblogStatusFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl =\r\n      deleteMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Delete',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst newBlogPostFormElement = window.document.querySelector(\r\n  '[data-action=\"new-blog-post\"]',\r\n);\r\n\r\nnewBlogPostFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = newBlogPostFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    newBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = newBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n  const summary =\r\n    newBlogPostFormElement.querySelector<HTMLInputElement>('[name=\"summary\"]')\r\n      ?.value ?? '';\r\n  const content =\r\n    newBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"content\"]',\r\n    )?.value ?? '';\r\n\r\n  const converter = new showdown.Converter();\r\n  const htmlContent = converter.makeHtml(content);\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Create',\r\n      actor: actorId,\r\n      to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n      object: {\r\n        type: 'Article',\r\n        summary,\r\n        content: htmlContent,\r\n        source: {\r\n          content,\r\n          mediaType: 'text/markdown',\r\n        },\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst updateBlogPostFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"update-blog-post\"]'),\r\n);\r\n\r\nfor (const updateBlogPostFormElement of updateBlogPostFormElements) {\r\n  updateBlogPostFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = updateBlogPostFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      updateBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      updateBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      updateBlogPostFormElement.getAttribute('data-object-id') ?? '';\r\n    const summary =\r\n      updateBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n        '[name=\"summary\"]',\r\n      )?.value ?? '';\r\n    const content =\r\n      updateBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n        '[name=\"content\"]',\r\n      )?.value ?? '';\r\n\r\n    const converter = new showdown.Converter();\r\n    const htmlContent = converter.makeHtml(content);\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Update',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: {\r\n          id: objectId,\r\n          summary,\r\n          content: htmlContent,\r\n        },\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst deleteBlogPostFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"delete-blog-post\"]'),\r\n);\r\n\r\nfor (const deleteBlogPostFormElement of deleteBlogPostFormElements) {\r\n  deleteBlogPostFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = deleteBlogPostFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      deleteBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      deleteBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      deleteBlogPostFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Delete',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst likeFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"like\"]'),\r\n);\r\n\r\nfor (const likeFormElement of likeFormElements) {\r\n  likeFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = likeFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      likeFormElement.getAttribute('data-followers-url') ?? '';\r\n    const objectActorId =\r\n      likeFormElement.getAttribute('data-object-actor-id') ?? '';\r\n    const actorId = likeFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId = likeFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Like',\r\n        actor: actorId,\r\n        to: [\r\n          'https://www.w3.org/ns/activitystreams#Public',\r\n          followersUrl,\r\n          objectActorId,\r\n        ],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n"],"names":["$d22854214e26eed4$var$hashtagRegexp","$d22854214e26eed4$var$mentionRegexp","$d22854214e26eed4$var$extractMentions","value","match","$d22854214e26eed4$var$extractHashtags","$d22854214e26eed4$var$getMentionActorUrls","async","mentions","Object","fromEntries","Promise","all","map","mention","_","username","domain","split","jrdProfile","fetch","headers","Accept","then","response","body","json","links","Array","isArray","link","rel","type","href","$d22854214e26eed4$var$replaceMicrosyntaxWithMarkup","mentionedActorUrls","replace","hashtag","URL","toLowerCase","window","location","toString","url","$d22854214e26eed4$var$editProfileFormElement","document","querySelector","addEventListener","event","preventDefault","outboxUrl","getAttribute","followersUrl","actorId","name","summary","htmlSummary","$parcel$interopDefault","$cnnrH$showdown","Converter","makeHtml","strippedSummary","$cnnrH$stringstriphtml","stripHtml","result","hashtags","tags","filter","method","JSON","stringify","actor","to","object","id","length","tag","get","reload","catch","error","console","log","$d22854214e26eed4$var$uploadIconFormElement","uploadMediaEndpointUrl","formData","FormData","set","createActivityUrl","icon","$d22854214e26eed4$var$uploadImageFormElement","image","$d22854214e26eed4$var$followFormElement","$d22854214e26eed4$var$newMicroblogStatusFormElement","content","htmlContent","values","$d22854214e26eed4$var$updateMicroblogStatusFormElements","from","querySelectorAll","updateMicroblogStatusFormElement","objectId","strippedContent","$d22854214e26eed4$var$deleteMicroblogStatusFormElements","deleteMicroblogStatusFormElement","$d22854214e26eed4$var$newBlogPostFormElement","source","mediaType","$d22854214e26eed4$var$updateBlogPostFormElements","updateBlogPostFormElement","$d22854214e26eed4$var$deleteBlogPostFormElements","deleteBlogPostFormElement","$d22854214e26eed4$var$likeFormElements","likeFormElement","objectActorId"],"version":3,"file":"parcel.046775d2.js.map","sourceRoot":"../"}