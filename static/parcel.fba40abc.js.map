{"mappings":"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","sources":["pages/home.ts"],"sourcesContent":["const editProfileFormElement = window.document.querySelector(\r\n  'form[data-action=\"edit-profile\"]',\r\n);\r\n\r\neditProfileFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = editProfileFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    editProfileFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = editProfileFormElement.getAttribute('data-actor-id') ?? '';\r\n\r\n  const name =\r\n    editProfileFormElement?.querySelector<HTMLInputElement>('[name=\"name\"]')\r\n      ?.value ?? '';\r\n  const summary =\r\n    editProfileFormElement?.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"summary\"]',\r\n    )?.value ?? '';\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Update',\r\n      actor: actorId,\r\n      to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n      object: {\r\n        id: actorId,\r\n        name,\r\n        summary,\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst uploadIconFormElement = window.document.querySelector<HTMLFormElement>(\r\n  'form[data-action=\"upload-icon\"]',\r\n);\r\n\r\nuploadIconFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = uploadIconFormElement.getAttribute('action') ?? '';\r\n  const uploadMediaEndpointUrl =\r\n    uploadIconFormElement.getAttribute('data-upload-media-endpoint-url') ?? '';\r\n  const followersUrl =\r\n    uploadIconFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = uploadIconFormElement.getAttribute('data-actor-id') ?? '';\r\n  const formData = new FormData(uploadIconFormElement);\r\n  formData.set('object', JSON.stringify({ type: 'Image' }));\r\n  fetch(uploadMediaEndpointUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => {\r\n      const createActivityUrl = response.headers.get('Location');\r\n      if (createActivityUrl) {\r\n        fetch(`/proxy?resource=${createActivityUrl}`)\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then(({ object: icon }) => {\r\n            fetch(outboxUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/activity+json',\r\n              },\r\n              body: JSON.stringify({\r\n                '@context': ['https://www.w3.org/ns/activitystreams'],\r\n                type: 'Update',\r\n                actor: actorId,\r\n                to: [\r\n                  'https://www.w3.org/ns/activitystreams#Public',\r\n                  followersUrl,\r\n                ],\r\n                object: {\r\n                  id: actorId,\r\n                  icon,\r\n                },\r\n              }),\r\n            })\r\n              .then((response) => {\r\n                if (response.headers.get('Location')) {\r\n                  window.location.reload();\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst uploadImageFormElement = window.document.querySelector<HTMLFormElement>(\r\n  'form[data-action=\"upload-image\"]',\r\n);\r\n\r\nuploadImageFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = uploadImageFormElement.getAttribute('action') ?? '';\r\n  const uploadMediaEndpointUrl =\r\n    uploadImageFormElement.getAttribute('data-upload-media-endpoint-url') ?? '';\r\n  const followersUrl =\r\n    uploadImageFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = uploadImageFormElement.getAttribute('data-actor-id') ?? '';\r\n  const formData = new FormData(uploadImageFormElement);\r\n  formData.set('object', JSON.stringify({ type: 'Image' }));\r\n  fetch(uploadMediaEndpointUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => {\r\n      const createActivityUrl = response.headers.get('Location');\r\n      if (createActivityUrl) {\r\n        fetch(`/proxy/?resource=${createActivityUrl}`)\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then(({ object: image }) => {\r\n            fetch(outboxUrl, {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/activity+json',\r\n              },\r\n              body: JSON.stringify({\r\n                '@context': ['https://www.w3.org/ns/activitystreams'],\r\n                type: 'Update',\r\n                actor: actorId,\r\n                to: [\r\n                  'https://www.w3.org/ns/activitystreams#Public',\r\n                  followersUrl,\r\n                ],\r\n                object: {\r\n                  id: actorId,\r\n                  image,\r\n                },\r\n              }),\r\n            })\r\n              .then((response) => {\r\n                if (response.headers.get('Location')) {\r\n                  window.location.reload();\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst followFormElement = window.document.querySelector(\r\n  'form[data-action=\"follow\"]',\r\n);\r\n\r\nfollowFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = followFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    followFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = followFormElement.getAttribute('data-actor-id') ?? '';\r\n\r\n  const object =\r\n    followFormElement.querySelector<HTMLInputElement>('[name=\"object\"]')\r\n      ?.value ?? '';\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Follow',\r\n      actor: actorId,\r\n      to: [\r\n        'https://www.w3.org/ns/activitystreams#Public',\r\n        followersUrl,\r\n        object,\r\n      ],\r\n      object,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst newMicroblogStatusFormElement = window.document.querySelector(\r\n  '[data-action=\"new-microblog-status\"]',\r\n);\r\n\r\nnewMicroblogStatusFormElement?.addEventListener('submit', async (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = newMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    newMicroblogStatusFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId =\r\n    newMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n  const content =\r\n    newMicroblogStatusFormElement.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"content\"]',\r\n    )?.value ?? '';\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Create',\r\n      actor: actorId,\r\n      to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n      object: {\r\n        type: 'Note',\r\n        content,\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst updateMicroblogStatusFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"update-microblog-status\"]'),\r\n);\r\n\r\nfor (const updateMicroblogStatusFormElement of updateMicroblogStatusFormElements) {\r\n  updateMicroblogStatusFormElement?.addEventListener(\r\n    'submit',\r\n    async (event) => {\r\n      event.preventDefault();\r\n\r\n      const outboxUrl =\r\n        updateMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n      const followersUrl =\r\n        updateMicroblogStatusFormElement.getAttribute('data-followers-url') ??\r\n        '';\r\n      const actorId =\r\n        updateMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n      const objectId =\r\n        updateMicroblogStatusFormElement.getAttribute('data-object-id') ?? '';\r\n      const content =\r\n        updateMicroblogStatusFormElement.querySelector<HTMLTextAreaElement>(\r\n          '[name=\"content\"]',\r\n        )?.value ?? '';\r\n\r\n      fetch(outboxUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/activity+json',\r\n        },\r\n        body: JSON.stringify({\r\n          '@context': ['https://www.w3.org/ns/activitystreams'],\r\n          type: 'Update',\r\n          actor: actorId,\r\n          to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n          object: {\r\n            id: objectId,\r\n            content,\r\n          },\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.headers.get('Location')) {\r\n            window.location.reload();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n  );\r\n}\r\n\r\nconst deleteMicroblogStatusFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"delete-microblog-status\"]'),\r\n);\r\n\r\nfor (const deleteMicroblogStatusFormElement of deleteMicroblogStatusFormElements) {\r\n  deleteMicroblogStatusFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl =\r\n      deleteMicroblogStatusFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      deleteMicroblogStatusFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Delete',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst newBlogPostFormElement = window.document.querySelector(\r\n  '[data-action=\"new-blog-post\"]',\r\n);\r\n\r\nnewBlogPostFormElement?.addEventListener('submit', (event) => {\r\n  event.preventDefault();\r\n\r\n  const outboxUrl = newBlogPostFormElement.getAttribute('action') ?? '';\r\n  const followersUrl =\r\n    newBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n  const actorId = newBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n  const summary =\r\n    newBlogPostFormElement.querySelector<HTMLInputElement>('[name=\"summary\"]')\r\n      ?.value ?? '';\r\n  const content =\r\n    newBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n      '[name=\"content\"]',\r\n    )?.value ?? '';\r\n\r\n  fetch(outboxUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/activity+json',\r\n    },\r\n    body: JSON.stringify({\r\n      '@context': ['https://www.w3.org/ns/activitystreams'],\r\n      type: 'Create',\r\n      actor: actorId,\r\n      to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n      object: {\r\n        type: 'Article',\r\n        summary,\r\n        content,\r\n      },\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.headers.get('Location')) {\r\n        window.location.reload();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n});\r\n\r\nconst updateBlogPostFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"update-blog-post\"]'),\r\n);\r\n\r\nfor (const updateBlogPostFormElement of updateBlogPostFormElements) {\r\n  updateBlogPostFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = updateBlogPostFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      updateBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      updateBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      updateBlogPostFormElement.getAttribute('data-object-id') ?? '';\r\n    const summary =\r\n      updateBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n        '[name=\"summary\"]',\r\n      )?.value ?? '';\r\n    const content =\r\n      updateBlogPostFormElement.querySelector<HTMLTextAreaElement>(\r\n        '[name=\"content\"]',\r\n      )?.value ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Update',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: {\r\n          id: objectId,\r\n          summary,\r\n          content,\r\n        },\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst deleteBlogPostFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"delete-blog-post\"]'),\r\n);\r\n\r\nfor (const deleteBlogPostFormElement of deleteBlogPostFormElements) {\r\n  deleteBlogPostFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = deleteBlogPostFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      deleteBlogPostFormElement.getAttribute('data-followers-url') ?? '';\r\n    const actorId =\r\n      deleteBlogPostFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId =\r\n      deleteBlogPostFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Delete',\r\n        actor: actorId,\r\n        to: ['https://www.w3.org/ns/activitystreams#Public', followersUrl],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n\r\nconst likeFormElements = Array.from(\r\n  window.document.querySelectorAll('[data-action=\"like\"]'),\r\n);\r\n\r\nfor (const likeFormElement of likeFormElements) {\r\n  likeFormElement.addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n\r\n    const outboxUrl = likeFormElement.getAttribute('action') ?? '';\r\n    const followersUrl =\r\n      likeFormElement.getAttribute('data-followers-url') ?? '';\r\n    const objectActorId =\r\n      likeFormElement.getAttribute('data-object-actor-id') ?? '';\r\n    const actorId = likeFormElement.getAttribute('data-actor-id') ?? '';\r\n    const objectId = likeFormElement.getAttribute('data-object-id') ?? '';\r\n\r\n    fetch(outboxUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/activity+json',\r\n      },\r\n      body: JSON.stringify({\r\n        '@context': ['https://www.w3.org/ns/activitystreams'],\r\n        type: 'Like',\r\n        actor: actorId,\r\n        to: [\r\n          'https://www.w3.org/ns/activitystreams#Public',\r\n          followersUrl,\r\n          objectActorId,\r\n        ],\r\n        object: objectId,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.headers.get('Location')) {\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  });\r\n}\r\n"],"names":["$d22854214e26eed4$var$editProfileFormElement","window","document","querySelector","addEventListener","async","event","preventDefault","outboxUrl","getAttribute","followersUrl","actorId","name","value","summary","fetch","method","headers","Accept","body","JSON","stringify","type","actor","to","object","id","then","response","get","location","reload","catch","error","console","log","$d22854214e26eed4$var$uploadIconFormElement","uploadMediaEndpointUrl","formData","FormData","set","createActivityUrl","json","icon","$d22854214e26eed4$var$uploadImageFormElement","image","$d22854214e26eed4$var$followFormElement","$d22854214e26eed4$var$newMicroblogStatusFormElement","content","$d22854214e26eed4$var$updateMicroblogStatusFormElements","Array","from","querySelectorAll","updateMicroblogStatusFormElement","objectId","$d22854214e26eed4$var$deleteMicroblogStatusFormElements","deleteMicroblogStatusFormElement","$d22854214e26eed4$var$newBlogPostFormElement","$d22854214e26eed4$var$updateBlogPostFormElements","updateBlogPostFormElement","$d22854214e26eed4$var$deleteBlogPostFormElements","deleteBlogPostFormElement","$d22854214e26eed4$var$likeFormElements","likeFormElement","objectActorId"],"version":3,"file":"parcel.fba40abc.js.map","sourceRoot":"../"}